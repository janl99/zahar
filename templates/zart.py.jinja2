#!/usr/bin/env python3

#    zart Zabbix API Retrieval Tool.
#    Copyright (C) 2020 David Marsh
#
#    This program is free software: you can redistribute it and/or modify
#    it under the terms of the GNU General Public License as published by
#    the Free Software Foundation, either version 3 of the License, or
#    (at your option) any later version.
#
#    This program is distributed in the hope that it will be useful,
#    but WITHOUT ANY WARRANTY; without even the implied warranty of
#    MERCHANTABILITY or FITNESS FOR A PARTICULAR PURPOSE.  See the
#    GNU General Public License for more details.
#
#    You should have received a copy of the GNU General Public License
#    along with this program.  If not, see <https://www.gnu.org/licenses/>.

__project__ = 'zahar'
__appname__ = 'zart'
__appdesc__ = 'Zabbix API Retrieval Tool'
__version__ = '0.3'
__author__ = 'David Marsh'
__license__ = 'GPLv3'
__copyright__ = 'Copyright 2020 David Marsh'
__url__ = 'https://github.com/rdmarsh/zahar'


from pyzabbix import ZabbixAPI
import os
import sys
import click
import click_config_file
import socket
import socks


{% for command in commands -%}
from apiclasses import {{ command }}
{% endfor %}
config_file = os.path.join(click.get_app_dir(__project__, force_posix=True), 'config.ini')


class Zart(object):
    def __init__(self, zapi, apiv):
        self.zapi = zapi
        self.apiv = apiv


@click.group(epilog='default config file: ' + click.format_filename(config_file))
@click_config_file.configuration_option(config_file_name=config_file)
@click.option('--zaburl', help='Zabbix URL.')
@click.option('--userid', help='Zabbix username.')
@click.option('--passwd', help='Zabbix password.')
@click.option('--proxy', type=(str, int),
              default=(None, 1080), metavar='<HOST PORT>',
              help='Socks5 proxy address and port.')
# todo: add a flag to show the api version and exit
@click.version_option(version=__version__)
@click.pass_context
def cli(ctx, zaburl, userid, passwd, proxy):
    """
    zart Zabbix API Retrieval Tool.
    """

    if not zaburl or not userid or not passwd:
        click.secho('Error: zaburl, userid or passwd not set via cli or in config file', fg='red', err=True)
        click.secho('Default config file: ' + click.format_filename(config_file), fg='red', err=True)
        sys.exit(1)

    if proxy and None not in proxy:
        socks.set_default_proxy(socks.SOCKS5, proxy[0], proxy[1])
        socket.socket = socks.socksocket

    zapi = ZabbixAPI(zaburl)
    zapi.login(userid, passwd)
    apiv = zapi.apiinfo.version()
    ctx.obj = Zart(zapi, apiv)


{% for command in commands -%}
cli.add_command({{ command }}.{{ command }})
{% endfor %}
if __name__ == '__main__':
    cli()

