#!/usr/bin/env python3

import os
import sys
import click
import click_config_file
import socket
import socks
from pyzabbix import ZabbixAPI
import pandas as pd
from pygments import highlight, lexers, formatters

__project__ = 'zahar'

config_file = os.path.join(click.get_app_dir(__project__, force_posix=True), 'config.ini')


def outputformat(obj, outputformat='txt'):
    df = pd.DataFrame(obj)

    if not df.empty:
        if outputformat == 'csv':
            click.echo(df.to_csv(index=False))
        elif outputformat == 'html':
            click.echo(df.to_html(index=False))
        elif outputformat == 'pretty-html':
            colorful_html = highlight(df.to_html(index=False),
                                      lexers.HtmlLexer(),
                                      formatters.TerminalFormatter())
            click.echo(colorful_html)
        elif outputformat == 'json':
            click.echo(df.to_json(orient='records'))
        elif outputformat == 'pretty-json':
            colorful_json = highlight(df.to_json(orient='records'),
                                      lexers.JsonLexer(),
                                      formatters.TerminalFormatter())
            click.echo(colorful_json)
        elif outputformat == 'latex':
            click.echo(df.to_latex(index=False))
        elif outputformat == 'raw':
            click.echo(obj)
        else:
            # default to txt
            click.echo(df.to_string(index=False,))
    else:
        click.secho('Warning: no data found', fg='yellow', err=True)


@click.command(epilog='default config file: ' + click.format_filename(config_file))
@click_config_file.configuration_option(config_file_name=config_file)
@click.option('-z', '--zab_url', help='Zabbix URL.')
@click.option('-u', '--zab_usr', help='Zabbix username.')
@click.option('-p', '--zab_pwd', help='Zabbix password.')
@click.option('-s', '--sck_prx', type=(str, int), default=(None, 1080), metavar='<HOST PORT>', help='Socks5 proxy address and port.')
@click.option('-o', '--out_fmt', default='txt', type=click.Choice(['csv', 'html', 'pretty-html', 'json', 'pretty-json', 'latex', 'raw', 'txt']), help='Output format.')
def cli(zab_url, zab_usr, zab_pwd, sck_prx, out_fmt):
    if not zab_url or not zab_usr or not zab_pwd:
        click.secho('Error: zabbix url, username or password not set via cli or in config file', fg='red', err=True)
        click.secho('Default config file: ' + click.format_filename(config_file), fg='red', err=True)
        sys.exit(1)

    if sck_prx and None not in sck_prx:
        socks.set_default_proxy(socks.SOCKS5, sck_prx[0], sck_prx[1])
        socket.socket = socks.socksocket

    zapi = ZabbixAPI(zab_url)
    zapi.login(zab_usr, zab_pwd)

    obj = zapi.{{ command }}.get(
            {%- for flag, value in flags.items() %}
            {{ flag }}={{ value }},
            {%- endfor %}
            )
    outputformat(obj, out_fmt)


if __name__ == "__main__":
    cli()

